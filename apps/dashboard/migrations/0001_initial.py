# Generated by Django 4.2.10 on 2025-05-05 08:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название курса')),
                ('code', models.CharField(max_length=20, verbose_name='Код курса')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='dashboard.course', verbose_name='Курс')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Курс студента',
                'verbose_name_plural': 'Курсы студентов',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='PerformancePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField(auto_now_add=True, verbose_name='Дата прогноза')),
                ('predicted_score', models.FloatField(verbose_name='Прогнозируемый балл')),
                ('confidence', models.FloatField(verbose_name='Уверенность прогноза')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='dashboard.course', verbose_name='Курс')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Прогноз успеваемости',
                'verbose_name_plural': 'Прогнозы успеваемости',
                'ordering': ['-prediction_date'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('due_date', models.DateField(verbose_name='Срок сдачи')),
                ('max_score', models.PositiveIntegerField(default=100, verbose_name='Максимальный балл')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='dashboard.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='StudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Балл')),
                ('submitted_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата сдачи')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='dashboard.assignment', verbose_name='Задание')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Выполненное задание',
                'verbose_name_plural': 'Выполненные задания',
                'unique_together': {('student', 'assignment')},
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Балл')),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='dashboard.studentcourse', verbose_name='Курс студента')),
            ],
            options={
                'verbose_name': 'Активность',
                'verbose_name_plural': 'Активность',
                'unique_together': {('student_course', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('present', models.BooleanField(default=False, verbose_name='Присутствовал')),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='dashboard.studentcourse', verbose_name='Курс студента')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
                'unique_together': {('student_course', 'date')},
            },
        ),
    ]
